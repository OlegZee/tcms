@page "/products/edit/{productId:int}"
@using Microsoft.EntityFrameworkCore
@using Data
@using Data.Models

@inject NavigationManager uriHelper
@inject IJSRuntime js
@inject IDbContextFactory<ApplicationDbContext> dbFactory

<MudText Typo="Typo.h3">Edit</MudText>
<Form ButtonText="Update" product="product" OnValidSubmit="@EditProduct" OnDeleteVersion="@OnDeleteVersion" />

@code {
    [Parameter] public int productId { get; set; }
    Product product = new Product();
    ApplicationDbContext _context;

    protected async override Task OnParametersSetAsync()
    {
        _context = dbFactory.CreateDbContext();
        product = await _context.Products
            .Include(p => p.Versions)
            .FirstOrDefaultAsync(p => p.ProductId == productId);
    }

    async Task EditProduct()
    {
        _context.Entry(product).State = EntityState.Modified;
        await _context.SaveChangesAsync();
        await js.InvokeVoidAsync("alert", $"Updated Successfully!");
        uriHelper.NavigateTo("products");
    }

    void OnDeleteVersion(ProductVersion pv)
    {
        _context.Entry(pv).State = EntityState.Deleted;
    }

    public void Dispose()
    {
        _context.Dispose();
    }
}